{"version":3,"sources":["logo.svg","containers/Layout.js","components/Article.js","components/Form.js","containers/ArticleListView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Content","Footer","CustomLayout","props","className","theme","mode","defaultSelectedKeys","Item","key","style","padding","margin","children","textAlign","IconText","icon","text","React","createElement","Articles","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","footer","renderItem","item","title","actions","StarOutlined","LikeOutlined","MessageOutlined","extra","width","alt","src","Meta","avatar","href","description","content","FormItem","Form","CustomForm","handleFormSubmit","event","requestType","articleID","title1","target","elements","value","content1","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","setState","postId","id","onSubmit","label","name","placeholder","type","htmlType","Component","ArticleList","state","articles","fetchArticles","res","this","newProps","token","Article","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.07d3a575.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst CustomLayout = (props) =>{\r\n    return (\r\n\r\n                    <Layout className=\"layout\">\r\n                <Header>\r\n                  <div className=\"logo\" />\r\n                  <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                    <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                    <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n                  </Menu>\r\n                </Header>\r\n                <Content style={{ padding: '0 50px' }}>\r\n                  <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                  <div className=\"site-layout-content\">{props.children}</div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\r\n              </Layout>\r\n\r\n    );\r\n}\r\n\r\nexport default CustomLayout;\r\n","import React from 'react';\r\nimport { List, Avatar, Space } from 'antd';\r\n\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst IconText = ({ icon, text }) => (\r\n  <Space>\r\n    {React.createElement(icon)}\r\n    {text}\r\n  </Space>\r\n);\r\n\r\n\r\n\r\nconst Articles = (props) => {\r\n        return(\r\n  <List\r\n    itemLayout=\"vertical\"\r\n    size=\"large\"\r\n    pagination={{\r\n      onChange: page => {\r\n        console.log(page);\r\n      },\r\n      pageSize: 3,\r\n    }}\r\n    dataSource={props.data}\r\n    footer={\r\n      <div>\r\n        <b>ant design</b> footer part\r\n      </div>\r\n    }\r\n    renderItem={item => (\r\n      <List.Item\r\n        key={item.title}\r\n        actions={[\r\n          <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\r\n          <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\r\n          <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n        ]}\r\n        extra={\r\n          <img\r\n            width={272}\r\n            alt=\"logo\"\r\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n          />\r\n        }\r\n      >\r\n        <List.Item.Meta\r\n          avatar={<Avatar src={item.avatar} />}\r\n          title={<a href={item.href}>{item.title}</a>}\r\n          description={item.description}\r\n        />\r\n        {item.content}\r\n      </List.Item>\r\n    )}\r\n  />\r\n        )\r\n}\r\n\r\nexport default Articles;","import React from 'react';\r\nimport { Form,Input,Button } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst FormItem = Form.Item;//using antd form(already built in)\r\n\r\n\r\nclass CustomForm extends React.Component{\r\n\r\n\r\nhandleFormSubmit = (event, requestType, articleID) => {\r\n\r\n    //event.preventDefault();//in order to not reload the page\r\n    const title1 = event.target.elements.title.value;\r\n    const content1 = event.target.elements.content.value;\r\n\r\n    switch (requestType){\r\n        case 'post':\r\n\r\n        const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ title: title1 , content : content1})\r\n    };\r\n        fetch('http://127.0.0.1:8000/api/', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ postId: data.id }));\r\n\r\n\r\n        case 'put':\r\n        //donot use axios for put use fetch\r\n           //return axios.put(`http://127.0.0.1:8000/api/${articleID}/`,\r\n            //{\r\n            //    title:title1,\r\n            //    content:content1\r\n            //}\r\n        //)\r\n        //.then(res => console.log(res))\r\n        //.catch(error => console.err(error));\r\n\r\n        case 'delete':\r\n        //same as delete as well\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form onSubmit={(event) => this.handleFormSubmit(event,this.props.requestType,this.props.articleID)}>\r\n                    <FormItem label=\"Title\">\r\n                        <input name=\"title\" placeholder=\"enter title here\"/>\r\n                    </FormItem>\r\n                    <FormItem label=\"Content\">\r\n                        <input name=\"content\" placeholder=\"enter content here\"/>\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                    </FormItem>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default CustomForm;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Articles from \"../components/Article\";\r\n\r\nimport CustomForm from '../components/Form'\r\n\r\n\r\nclass ArticleList extends React.Component {\r\n  state = {\r\n    articles: []\r\n  };\r\n\r\n//using axios\r\n//  fetchArticles = () => {\r\n//    axios.get(\"http://127.0.0.1:8000/api/\").then(res => {\r\n//      this.setState({\r\n//        articles: res.data\r\n//      });\r\n//    });\r\n//  }\r\n\r\n//using fetch\r\nfetchArticles = () => {\r\n\r\n    fetch(\"http://127.0.0.1:8000/api/\")\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n        this.setState({\r\n            articles : data\r\n        })\r\n    });\r\n\r\n}\r\n\r\n//this is the important function\r\n  componentDidMount() {\r\n    this.fetchArticles();\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token) {\r\n      this.fetchArticles();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Articles data={this.state.articles} /> <br />\r\n        <h2>Create an Article</h2>\r\n        <CustomForm requestType=\"post\" articleID={null}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticleList;","import React from 'react';\nimport logo from './logo.svg';\n\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less\n\nimport CustomLayout from './containers/Layout'\nimport ArticleList from './containers/ArticleListView'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <CustomLayout>\n\n        <ArticleList />\n\n\n     </CustomLayout>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}